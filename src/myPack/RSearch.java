 /*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RSearch.java
 *
 * Created on 18 Oct, 2011, 7:44:34 PM
 */
package myPack;

/**
 *
 * @author xena
 */
import java.io.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.Desktop;
import java.awt.event.MouseListener;
import java.util.ArrayList;

public class RSearch extends javax.swing.JFrame {

    String dir, keys[];
    File list[];
    javax.swing.DefaultListModel model = new javax.swing.DefaultListModel();
    rSearch rs;
    double mat[][];
    ArrayList al;

    /** Creates new form RSearch */
    public RSearch() {
        initComponents();
        jLabel2.setText( System.getProperty( "user.home" ) );

        MouseListener mouseListener = new MouseAdapter() {

            @Override
            public void mouseClicked( MouseEvent mouseEvent ) {
                javax.swing.JList theList = (javax.swing.JList) mouseEvent.getSource();
                if ( mouseEvent.getClickCount() == 2 ) {
                    int index = theList.locationToIndex( mouseEvent.getPoint() );

                    if ( index >= 0 ) {
                        Object o = theList.getModel().getElementAt( index );
                        openFile( new File( dir + File.separator + o.toString() ) );
                    }
                }
            }
        };
        jList1.addMouseListener( mouseListener );
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jButton4 = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Their Ressurected Search");

        jButton1.setText("Start");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Change Directory");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Current Search Directory:");

        jList1.setModel(model);
        jScrollPane1.setViewportView(jList1);

        jButton4.setText("Exit");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jProgressBar1.setStringPainted(true);

        jLabel4.setText("Type here to start search......");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(jButton4)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
    System.exit( 0 );
}//GEN-LAST:event_jButton4ActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    javax.swing.JFileChooser jc = new javax.swing.JFileChooser();
    jc.setApproveButtonText( "Select this folder" );
    jc.setFileSelectionMode( jc.DIRECTORIES_ONLY );
    jc.setMultiSelectionEnabled( false );
    jc.setFileHidingEnabled( false );

    int returnVal = jc.showOpenDialog( RSearch.this );
    if ( returnVal == javax.swing.JFileChooser.APPROVE_OPTION ) {
        jLabel2.setText( dir = jc.getSelectedFile().getAbsolutePath() );

        indexer();
    }
}//GEN-LAST:event_jButton2ActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    if ( jTextField1.getText().equals( "" ) ) {
        javax.swing.JOptionPane.showMessageDialog( null, "Nothing to search!" );
        return;
    }
    model.clear();
    jProgressBar1.setMinimum( 0 );
    jProgressBar1.setMaximum( 100 );
    jProgressBar1.setValue( 0 );

    rs = new rSearch( jTextField1.getText() );
    rs.start();
}//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main( String args[] ) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for ( javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels() ) {
                if ( "Nimbus".equals( info.getName() ) ) {
                    javax.swing.UIManager.setLookAndFeel( info.getClassName() );
                    break;
                }
            }
        } catch ( ClassNotFoundException ex ) {
            java.util.logging.Logger.getLogger( RSearch.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        } catch ( InstantiationException ex ) {
            java.util.logging.Logger.getLogger( RSearch.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        } catch ( IllegalAccessException ex ) {
            java.util.logging.Logger.getLogger( RSearch.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        } catch ( javax.swing.UnsupportedLookAndFeelException ex ) {
            java.util.logging.Logger.getLogger( RSearch.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater( new Runnable() {

            @Override
            public void run() {
                new RSearch().setVisible( true );
            }
        } );
    }

    void indexer() {
        al = new ArrayList();
        list = new File( dir ).listFiles();
        String line, words[];

        for ( File f : list ) {
            try {
                BufferedReader br = new BufferedReader( new FileReader( f ) );

                line = br.readLine();
                while ( line != null ) {

                    words = line.split( "\\s|\\!+\\s|\\,+\\s|\\?+\\s|\\.+\\s|\\,|\\?|\\!|\\.|\\:" );
                    for ( String w : words ) {
                        if ( !al.contains( w ) )
                            al.add( w );
                    }
                    line = br.readLine();
                }
                br.close();
            } catch ( Exception e ) {
            }
        }

        Object arr[] = al.toArray();
        keys = new String[arr.length];
        mat = new double[keys.length][list.length];

        for ( int i = 0; i < arr.length; i++ )
            keys[i] = arr[i].toString();

        matFiller();

    }

    void matFiller() {
        int i, j;
        double w1, w2, sum = 0.0;

        for ( i = 0; i < keys.length; i++ ) {
            for ( j = 0; j < list.length; j++ ) {
                w1 = weigh1( keys[i], list[j] );
                w2 = weigh2( keys[i] );

                mat[i][j] = Math.abs( w1 * Math.log10( (double) list.length / w2 ) );
            }
        }
        for ( i = 0; i < list.length; i++ ) {
            for ( j = 0; j < keys.length; j++ ) {
                sum = sum + (mat[j][i] * mat[j][i]);
            }
            for ( j = 0; j < keys.length; j++ )
                mat[j][i] = mat[j][i] / Math.sqrt( sum );
        }
    }

    int weigh1( String word, File f ) {
        String line, words[];
        int count = 0;

        try {
            BufferedReader br = new BufferedReader( new FileReader( f ) );

            line = br.readLine();
            while ( line != null ) {

                words = line.split( "\\s|\\!+\\s|\\,+\\s|\\?+\\s|\\.+\\s|\\,|\\?|\\!|\\.|\\:" );
                for ( String w : words ) {
                    if ( w.equals( word ) )
                        count++;
                }
                line = br.readLine();
            }
            br.close();
        } catch ( Exception e ) {
        }

        return count;
    }

    int weigh2( String word ) {
        String line, words[];
        int count = 0;

        try {
            for ( File f : list ) {
                BufferedReader br = new BufferedReader( new FileReader( f ) );

                line = br.readLine();
                while ( line != null ) {

                    words = line.split( "\\s|\\!+\\s|\\,+\\s|\\?+\\s|\\.+\\s|\\,|\\?|\\!|\\.|\\:" );
                    for ( String w : words ) {
                        if ( w.equals( word ) )
                            count++;
                    }
                    line = br.readLine();
                }
                br.close();
            }
        } catch ( Exception e ) {
        }

        return count;
    }

    void openFile( File f ) {
        Desktop d = Desktop.getDesktop();

        try {
            d.open( f );
        } catch ( Exception e ) {
        }
    }

    class rSearch extends Thread {

        String query;
        double qmat[], fin[];

        rSearch( String query ) {
            this.query = query;
        }

        @Override
        public void run() {
            double sum = 0.0;
            int i = 0, j = 0, k = 0;
            String qwords[];

            qmat = new double[keys.length];

            qwords = query.split( "\\s|\\!+\\s|\\,+\\s|\\?+\\s|\\.+\\s|\\,|\\?|\\!|\\.|\\:" );
            for ( String w : qwords ) {
                if ( al.contains( w ) )
                    qmat[al.indexOf( w )] = 1.0;
            }

            jProgressBar1.setValue( 25 );

            for ( i = 0; i < keys.length; i++ ) {
                sum = sum + (qmat[i] * qmat[i]);
            }
            for ( i = 0; i < keys.length; i++ ) {
                qmat[i] = qmat[i] / Math.sqrt( sum );
            }

            jProgressBar1.setValue( 50 );

            fin = new double[list.length];

            for ( i = 0; i < list.length; i++ ) {
                for ( j = 0; j < keys.length; j++ ) {
                    for ( k = 0; k < keys.length; k++ )
                        fin[i] = fin[i] + mat[k][i] * qmat[k];
                }
            }

            sortList( fin, list, 0, fin.length - 1 );

            for ( i = 0; i < list.length; i++ )
                System.out.println( "file = " + list[i].getName() + " rank = " + fin[i] );

            for ( i = 0; i < list.length; i++ ) {
                if ( fin[i] != 0 )
                    model.addElement( list[i].getName() );
            }

            jProgressBar1.setValue( 100 );
            indexer();

            this.stop();
        }

        void sortList( double arr[], File slist[], int lo, int hi ) {
            int i = lo, j = hi, pivot = (i + j) / 2;
            File ftemp;
            double temp;

            do {
                while ( arr[i] > arr[pivot] )
                    i++;
                while ( arr[j] < arr[pivot] )
                    j--;

                if ( i <= j ) {
                    temp = arr[i];
                    arr[i] = arr[j];
                    arr[j] = temp;
                    ftemp = slist[i];
                    slist[i] = slist[j];
                    slist[j] = ftemp;

                    i++;
                    j--;
                }
            } while ( i < j );

            if ( j > lo )
                sortList( arr, slist, lo, j );
            if ( i < hi )
                sortList( arr, slist, i, hi );
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
